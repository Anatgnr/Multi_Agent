# Config/tasks.yaml

architecture:
  description: >
    Define the complete project structure for the requested application: {prompt}.
    Propose the necessary files and folders for the application.
    Include at minimum `src/main.py`, `src/app.py`, `requirements.txt`, `README.md`.
  expected_output: >
    A clear project plan in JSON format:
    {"src/main.py": "...", "src/app.py": "...", "README.md": "...", "requirements.txt": "..."}
  agent: Architect
  output_file: project_structure.json

backend:
  description: >
    Implement the backend logic of the project according to the defined structure.
    The code should capture and normalize keyboard and mouse events, optionally
    expose an internal API if needed, and place modules under `src/`.
  expected_output: >
    One or more functional Python scripts (e.g., `src/backend.py`, `src/events.py`).
  agent: Backend
  output_file: src/backend.py

app:
  description: >
    Create a Windows graphical interface that displays detected events in real time.
    Use Tkinter or PyQt depending on availability. The UI should live in `src/app.py`.
  expected_output: >
    An executable Python script (`src/app.py`) implementing the UI.
  agent: WindowsAppMaker
  output_file: src/app.py

doc:
  description: >
    Write the documentation for the generated project. Include a `README.md` with:
    goals, structure, installation instructions, usage and contribution guidelines.
  expected_output: >
    A clear, well-formatted Markdown README.
  agent: DocWriter
  output_file: README.md

dep:
  description: >
    Generate a `requirements.txt` file listing the Python dependencies needed
    (include versions if appropriate) and add notes for installation.
  expected_output: >
    A valid `requirements.txt` file.
  agent: DependencyManager
  output_file: requirements.txt

docker:
  description: >
    (Optional) Prepare the files necessary to package the application into a
    container or to build a Windows executable (e.g., Dockerfile, packaging scripts).
  expected_output: >
    A `Dockerfile` or packaging scripts ready to use.
  agent: Docker
  output_file: Dockerfile